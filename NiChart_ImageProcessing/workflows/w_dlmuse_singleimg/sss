'''
Snakemake file for NiChart MRI processing workflow
 
Input data: MRI images with consistent file suffixes organized 
in folder structure: data/init_mri/MRI/{study}/{mrid}/{mrid}{file_suffix}    
'''

configfile: "./config/config.yaml"
workdir: '.'

## Generate ID list (from input files)
import pandas as pd
LIST_MRID = glob_wildcards("../../data/MRI/{study}/{mrid}_T1.nii.gz")
DF_MRID = pd.DataFrame(data = LIST_MRID.study, columns = ['Study'])
DF_MRID['MRID'] = LIST_MRID.mrid

### Alternative approach: Read IDs from list
#DF_MRID = pd.read_csv(config['list_MRID'])

rule ALL:
    input: 
        expand("../../data/DLMUSE_ROIs/{study}_DLMUSE.csv", study=['OASIS3','IXI'])
        #"../../data/DLMUSE/IXI/IXI002-Guys-0828_T1_dlmuse.csv"
        
rule nichart_dlmuse:
    '''
    Rule to run DLMUSE
     DLMUSE uses the raw T1 as input and generates the roi image and the csv file with ROI volumes
    '''
    input:
        "../../data/MRI/{study}/{mrid}_T1.nii.gz"
    output:
        img="../../data/DLMUSE/{study}/{mrid}_T1_dlmuse.nii.gz",
        csv="../../data/DLMUSE/{study}/{mrid}_T1_dlmuse.csv"
    resources:
        cpus_per_task=8,
        mem_mb=32000,
        slurm_extra="--ntasks-per-node=4"
    shell:
        "bash ./utils/run_nichart_dlmuse.sh {input} {output}"

def get_files(wildcards):
    '''
    Returns a list of roi input files for a specific study
    '''
    std_ids = DF_MRID[DF_MRID.Study==wildcards.study].MRID.tolist()
    std_files = ['../../data/DLMUSE/' + wildcards.study + '/' + x + '_T1_dlmuse.csv' for x in std_ids]
    return std_files
    
rule combine_vol:
    '''
    Combines all roi csv files for a study
    '''
    input:
        get_files
    output:
        "../../data/DLMUSE_ROIs/{study}_DLMUSE.csv"
    resources:
        mem_mb=8000,
    shell:
        "bash ./utils/run_combine_ROIs.sh {output} {input}"

